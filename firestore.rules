rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow read/write access to authenticated users for their company data
    match /companies/{companyId} {
      allow read, write: if request.auth != null 
        && resource.data.members[request.auth.uid] != null;
      
      // Allow user creation for setup
      allow create: if request.auth != null;
    }
    
    // Ships access control
    match /ships/{shipId} {
      allow read, write: if request.auth != null 
        && exists(/databases/$(database)/documents/companies/$(resource.data.companyId))
        && get(/databases/$(database)/documents/companies/$(resource.data.companyId)).data.members[request.auth.uid] != null;
      
      // Subcollections inherit parent permissions
      match /{subcollection=**} {
        allow read, write: if request.auth != null 
          && exists(/databases/$(database)/documents/companies/$(get(/databases/$(database)/documents/ships/$(shipId)).data.companyId))
          && get(/databases/$(database)/documents/companies/$(get(/databases/$(database)/documents/ships/$(shipId)).data.companyId)).data.members[request.auth.uid] != null;
      }
    }
    
    // User profiles
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Admin access for system operations
    match /{document=**} {
      allow read, write: if request.auth != null 
        && request.auth.token.admin == true;
    }
  }
}
